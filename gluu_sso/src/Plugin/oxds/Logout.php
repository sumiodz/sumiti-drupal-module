<?php
	/**
	 * @file
	 * Gluu_sso_logout class .
	 */
	 	namespace Drupal\gluu_sso\Plugin\oxds;
 		use Drupal\gluu_sso\Plugin\oxds\Client_Socket_OXD_RP;

	class Logout extends Client_OXD_RP
	{
		/**
		 * @var string $request_oxd_id Need to get after registration site in gluu-server
		 */
		private $request_oxd_id = null;
		/**
		 * @var string $request_id_token Need to get after registration site in gluu-server
		 */
		private $request_id_token = null;
		/**
		 * @var string $request_post_logout_redirect_uri Need to get after registration site in gluu-server
		 */
		private $request_post_logout_redirect_uri = null;
		/**
		 * @var string $request_session_state Need to get after registration site in gluu-server
		 */
		private $request_session_state = null;
		/**
		 * @var string $request_state Need to get after registration site in gluu-server
		 */
		private $request_state = null;
		/**
		 * Response parameter from oXD-server
		 * Doing logout user from all sites
		 * @var string $response_claims
		 */
		private $response_html;

		/**
		 * Constructor
		 * @return  void
		 */
		public function __construct()
		{
			parent::__construct(); // TODO: Change the autogenerated stub
		}

		/**
		 * @return string
		 */
		public function getRequestState()
		{
			return $this->request_state;
		}

		/**
		 * @param string $request_state
		 * @return  void
		 */
		public function setRequestState($request_state)
		{
			$this->request_state = $request_state;
		}

		/**
		 * @return string
		 */
		public function getRequestSessionState()
		{
			return $this->request_session_state;
		}

		/**
		 * @param string $request_session_state
		 * @return  void
		 */
		public function setRequestSessionState($request_session_state)
		{
			$this->request_session_state = $request_session_state;
		}


		/**
		 * @param string $request_post_logout_redirect_uri
		 * @return  void
		 */
		public function setRequestPostLogoutRedirectUri($request_post_logout_redirect_uri)
		{
			$this->request_post_logout_redirect_uri = $request_post_logout_redirect_uri;
		}

		/**
		 * @return string
		 */
		public function getResponseHtml()
		{
			$this->response_html = $this->getResponseData()->url;

			return $this->response_html;
		}

		/**
		 * @return string
		 */
		public function getRequestIdToken()
		{
			return $this->request_id_token;
		}

		/**
		 * @return string
		 */
		public function getRequestPostLogoutRedirectUri()
		{
			return $this->request_post_logout_redirect_uri;
		}

		/**
		 * @param string $request_id_token
		 * @return  void
		 */
		public function setRequestIdToken($request_id_token)
		{
			$this->request_id_token = $request_id_token;
		}

		/**
		 * @return string
		 */
		public function getRequestOxdId()
		{
			return $this->request_oxd_id;
		}

		/**
		 * @param string $request_oxd_id
		 * @return  void
		 */
		public function setRequestOxdId($request_oxd_id)
		{
			$this->request_oxd_id = $request_oxd_id;
		}

		/**
		 * Protocol command to oXD server
		 * @return void
		 */
		public function setCommand()
		{
			$this->command = 'get_logout_uri';
		}

		/**
		 * Protocol parameter to oXD server
		 * @return void
		 */
		public function setParams()
		{
			$this->params = array(
				"oxd_id" => $this->getRequestOxdId(),
				"id_token_hint" => $this->getRequestIdToken(),
				"post_logout_redirect_uri" => $this->getRequestPostLogoutRedirectUri(),
				"state" => $this->getRequestState(),
				"session_state" => $this->getRequestSessionState()
			);
		}

	}
