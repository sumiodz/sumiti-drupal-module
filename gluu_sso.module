<?php

/**
 * @file
 * Contains gluu_sso.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Symfony\Component\HttpFoundation\RedirectResponse;
use Drupal\gluu_sso\Plugin\oxds\Logout;
/**
 * Implements hook_help().
 */
function gluu_sso_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the gluu_sso module.
    case 'help.page.gluu_sso':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('This module will enable you to authenticate users against any standard OpenID Connect Provider.') . '</p>';
      return $output;

    default:
  }
}
/**
 * Getting base url;
 */
 function gluu_sso_getbaseurl()
{
  // output: /myproject/index.php
  $currentPath = $_SERVER['PHP_SELF'];

  // output: Array ( [dirname] => /myproject [basename] => index.php [extension] => php [filename] => index )
  $pathInfo = pathinfo($currentPath);

  // output: localhost
  $hostName = $_SERVER['HTTP_HOST'];

  // output: http://
  $protocol = (!empty($_SERVER['HTTPS']) && $_SERVER['HTTPS'] !== 'off' || $_SERVER['SERVER_PORT'] == 443) ? "https://" : "http://";

  // return: http://localhost/myproject/
  if (strpos($pathInfo['dirname'], '\\') !== false) {
    return $protocol . $hostName . "/";
  } else {
    return $protocol . $hostName . $pathInfo['dirname'] . "/";
  }
}
/**
* Implements hook_user_logout().
*/
// function gluu_sso_user_logout($account)
// {
//   $base_url = gluu_sso_getbaseurl();
//   $config = \Drupal::configFactory()->getEditable('gluu_sso.default');
//   $gluu_provider = $config->get('gluu_provider');
//       $arrContextOptions = array(
//         "ssl" => array(
//           "verify_peer" => false,
//           "verify_peer_name" => false,
//         ),
//       );
//       $json = file_get_contents($gluu_provider . '/.well-known/openid-configuration', false, stream_context_create($arrContextOptions));
//       $obj = json_decode($json);
//
//       $oxd_id = $config->get('gluu_oxd_id');
//       $gluu_config = $config->get('gluu_config');
//       $user_oxd_id_token=$config->get('user_oxd_id_token');
//       $session_states=$config->get('session_states');
//       $state=$config->get('state');
//       if (!empty($obj->end_session_endpoint) or $gluu_provider == 'https://accounts.google.com') {
//         if (!empty($user_oxd_id_token)) {
//           if ($oxd_id && $user_oxd_id_token) {
//             $logout = new Logout();
//             $logout->setRequestOxdId($oxd_id);
//             $logout->setRequestIdToken($user_oxd_id_token);
//             $logout->setRequestPostLogoutRedirectUri($base_url.'/user/logout');
//             $logout->setRequestSessionState($session_states);
//             $logout->setRequestState($state);
//             $logout->request();
//             header('Location: ' . $logout->getResponseObject()->data->uri);
//             exit;
//           }
//         }
//       } else {
//         }
//      $user = \Drupal::currentUser();
//      \Drupal::service('session_manager')->destroy();
//      $gluu_custom_logout = $config->get('gluu_custom_logout');
//   if (!empty($gluu_custom_logout)) {
//     //drupal_goto($gluu_custom_logout);
//     header('Location: ' . $gluu_custom_logout);
//     exit;
//   } else {
//     //drupal_goto($base_url);
//     header('Location: ' . $base_url);
//     exit;
//   }
// }
